Admin.js:
const mongoose = require('mongoose');

const AdminSchema = new mongoose.Schema({
    username: {
        type: String,
        required: true,
    },
    password: {
        type: String,
        required: true,
    },
});

module.exports = Admin = mongoose.model('admin', AdminSchema);

Discussion.js
const mongoose = require("mongoose");

const Discussion = mongoose.Schema({
  title: {
    type: String,
    required: true,
  },
  description: {
    type: String,
    required: true,
  },
  replies: {
    type: Array,
  },
  createdAt: {
    type: Date,
    default: Date.now,
  },
  phone: {
    type: String,
    required: true,
  },
});

module.exports = mongoose.model("Discussion", Discussion);
Doctor.js:
const number = require("@hapi/joi/lib/types/number");
const mongoose = require("mongoose");

const doctorSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    min: 6,
    max: 255,
  },

  phone: {
    type: String,
    required: true,
    min: 10,
    max: 10,
  },
  image: {
    type: String,
    required: true,
  },
  // create a array of speciality
  experience: {
    type: String,
    required: true,
  },
  NMC: {
    type: String,
    required: true,
  },
  speciality: {
    type: String,
    required: true,
  },
  qualification: {
    type: String,
    required: true,
  },
  hospital: {
    type: String,
    required: true,
  },
  fees: {
    type: String,
    required: true,
  },
  available: [
    {
      id: {
        type: number,
        required: true,
      },
      date: {
        type: String,
        default: "00-00-0000",
      },
      time: {
        type: String,
        default: "00:00-00:00",
      },
    },
  ],
});

module.exports = mongoose.model("Doctor", doctorSchema);
History.js
const mongoose = require("mongoose");

const History = mongoose.Schema({
  phone: {
    type: String,
    required: true,
  },
  doctor_id: {
    type: String,
    required: true,
  },
  doctor: {
    type: String,
    required: true,
  },
  price: {
    type: String,
    required: true,
  },
  createdAt: {
    type: Date,
    default: Date.now,
  },
  token: {
    type: String,
    required: true,
  },
  alloted: {
    type: String,
    required: true,
  },
  status: {
    type: String,
    required: true,
  },
  hospital: {
    type: String,
    required: true,
  },
});

module.exports = mongoose.model("History", History);
Hospital.js
const mongoose = require("mongoose");

const hospitalSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    min: 6,
    max: 255,
  },
  phone: {
    type: String,
    required: true,
    min: 10,
    max: 10,
  },
  // create a array of speciality
  speciality: [
    {
      name: String,
      description: String,
    },
  ],
  city: {
    type: String,
    required: true,
    min: 6,
    max: 255,
  },
  address: {
    type: String,
    required: true,
    min: 6,
    max: 255,
  },
  email: {
    type: String,
    required: true,
    min: 6,
    max: 255,
  },
  password: {
    type: String,
    required: true,
    min: 6,
    max: 1024,
  },
  image: {
    type: String,
    default: "",
  },
  lat: {
    type: String,
    required: true,
  },
  long: {
    type: String,
    required: true,
  },
});

module.exports = mongoose.model("Hospital", hospitalSchema);
MailOtp.js:
const mongoose = require("mongoose");

const Otp = mongoose.Schema({
  email: {
    type: String,
    required: true,
  },
  otp: {
    type: String,
    required: true,
  },
  createdAt: {
    type: Date,
    default: Date.now,
  },
  expireAt: Date,
});

module.exports = mongoose.model("MailOtp", Otp);
Notice.js:
const mongoose = require("mongoose");

const Notice = mongoose.Schema({
  createdAt: {
    type: Date,
    default: Date.now,
  },
  user_name: {
    type: String,
    required: true,
  },
  message: {
    type: String,
    required: true,
  },
  discussion_id: {
    type: String,
    required: true,
  },
});

module.exports = mongoose.model("Notice", Notice);
Otp.js
const mongoose = require("mongoose");

const Otp = mongoose.Schema({
  phone: {
    type: String,
    required: true,
  },
  otp: {
    type: String,
    required: true,
  },
  createdAt: {
    type: Date,
    default: Date.now,
  },
  expireAt: {
    type: Date,
    required: true,
  },
});

module.exports = mongoose.model("Otp", Otp);
Rating.js
const mongoose = require("mongoose");

const Rating = mongoose.Schema({
  rating: {
    type: Number,
    default: 0,
  },
  review: {
    type: String,
    default: "",
  },
  createdAt: {
    type: Date,
    default: Date.now,
  },
  doctor_id: {
    type: String,
    required: true,
  },
  phone: {
    type: String,
    required: true,
  },
});

module.exports = mongoose.model("Rating", Rating);
User.js
const mongoose = require("mongoose");

const userSchema = new mongoose.Schema({
  name: {
    type: String,
    required: true,
    min: 6,
    max: 255,
  },
  emergencyContact: {
    type: String,
    default: "",
    min: 10,
    max: 10,
  },
  phone: {
    type: String,
    required: true,
    min: 10,
    max: 10,
  },

  email: {
    type: String,
    max: 255,
    min: 6,
  },
  city: {
    type: String,
    required: true,
    min: 6,
    max: 255,
  },
  age: {
    type: String,
    required: true,
    min: 6,
    max: 255,
  },
  date: {
    type: Date,
    default: Date.now,
  },
  profile: {
    type: String,
    default: "",
  },
  address: {
    type: String,
    default: "",
  },
  blood: {
    type: String,
    default: "",
  },
});

module.exports = mongoose.model("User", userSchema);

